public class search_in_rotated_sorted_array_with_duplicates {    /**     * When the array has duplicates, comparing A[low], A[mid] and A[high] cannot tell the     * difference between [1 1 1 1 2 1] and [1 2 1 1 1 1].     *      * If we insisted using binary search to solve this problem, then we have to remove all     * duplicates firstly, which is O(n) time complexity. While doing linear search is also     * just O(n).     */    public boolean search(int[] A, int target) {        int n = A.length;        for (int i = 0; i < n; i++) {            if (A[i] == target) {                return true;            }        }        return false;    }}